# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ feat/fix-codecov ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job  
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"

      - name: Setup
        run: npm ci

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: |
          npm test -- --no-watch --code-coverage --no-progress --browsers=ChromeHeadlessCI
           
      - name: Codecov Upload
        env:
            CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov

          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}  

      - name: build artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: artifact
          path: dist/*       

# now runs via google cloud
#  deploy:
#    runs-on: ubuntu-latest
#    env:
#      IMAGE_NAME: us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/gcr.io/${{ secrets.GCP_APP_NAME }}
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: 'Authenticate'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
#
#      - name: 'Setup up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v0'
#
#      - name: 'Configure Docker'
#        run: gcloud auth configure-docker us-docker.pkg.dev --quiet
#
#      - name: 'Build Docker image'
#        run: docker build . -t $IMAGE_NAME
#
#      - name: 'Push Docker image'
#        run: docker push $IMAGE_NAME
#



